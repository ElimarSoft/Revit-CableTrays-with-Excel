{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "DrawTrays29",
  "ElementResolver": {
    "ResolutionMap": {
      "DraftingView": {
        "Key": "Revit.Elements.Views.DraftingView",
        "Value": "RevitNodes.dll"
      },
      "SketchPlane": {
        "Key": "Revit.Elements.SketchPlane",
        "Value": "RevitNodes.dll"
      },
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "Family": {
        "Key": "Revit.Elements.Family",
        "Value": "RevitNodes.dll"
      },
      "Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DSCore.Data.Id": {
        "Key": "DSCore.Data",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.Data": {
        "Key": "DSCore.Data",
        "Value": "DSCoreNodes.dll"
      },
      "Location.X": {
        "Key": "DynamoUnits.Location",
        "Value": "DynamoUnits.dll"
      },
      "Location.Y": {
        "Key": "DynamoUnits.Location",
        "Value": "DynamoUnits.dll"
      },
      "Location.Z": {
        "Key": "DynamoUnits.Location",
        "Value": "DynamoUnits.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "9ad9b8efca7c4f2e93c02865a397544e",
      "Inputs": [
        {
          "Id": "64ef4ce974d7423c8481eb4469d4c981",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58015c46443a47ebafa01a15b4113f20",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1064fb1c826d427aa77ae37f99bdfd03",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52d47ed45f4d4670a66132bf2f5e11c6",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daa9d4028785402c85a30e3da44c39b1",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"C:\\\\Revit\\\\Excel\\\\RevitMacros02.xlsx\";\n\"LineDataIn\";\nfalse;\ntrue;",
      "Id": "04def07fc35f47ba92301cf52c77e3f1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dea6f35f2f784cde943df0e80798475f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a50b50564d6e41aeb482818df21dea0c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "505f6400e1a64a05bddc65729d05862f",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0e13cb9ab4e49588e8fa4d5869763f3",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1542f083d4934e5ca2d7b9250529316a",
      "Inputs": [
        {
          "Id": "be4d599cb223410096d1e2c91320396f",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4963754d52c41e08b75b1f83cf725e7",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nData = IN[0]\r\npNum = len(Data)\r\n\r\npc = 7 #Colum for point data begin\r\n\r\nP = [0]*pNum*2\r\n\r\nfor n in range(pNum-1):\r\n\tP[2*n] = Point.ByCoordinates(Data[n+1][pc],Data[n+1][pc+1],Data[n+1][pc+2])\r\n\tP[2*n+1] = Point.ByCoordinates(Data[n+1][pc+3],Data[n+1][pc+4],Data[n+1][pc+5])\r\n\r\nLines = []\r\n\r\nfor n in range(pNum-1):\r\n    Lines += [Line.ByStartPointEndPoint(P[2*n], P[2*n+1])]\r\n\r\nOUT = Lines\r\n\r\n  ",
      "VariableInputPorts": true,
      "Id": "ac2d7f4636be4979841e2267c7c8179c",
      "Inputs": [
        {
          "Id": "3870a6d5cc104b5492d8e6c9f7b026b2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82843f3bcc3f41c2b918a60afa4e566e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportExcel@string,string,int,int,var[][],bool",
      "Id": "f5f7d2a2d2cf4d0d9a876c760c52aba2",
      "Inputs": [
        {
          "Id": "899622d4c8a84fbf884f5c5c0e884a94",
          "Name": "filePath",
          "Description": "File path to the Microsoft Excel spreadsheet.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baa562b47a0943b0a8f81d776e8b23d2",
          "Name": "sheetName",
          "Description": "Name of the workseet to write data to.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ebba9b3bffa43a197299365397cb82d",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "853e021cac564279b2487318fb992e0f",
          "Name": "startCol",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2e23ddaa97149f5942122e78700fa68",
          "Name": "data",
          "Description": "Data to write to the spreadsheet.\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a29e185d46794cfc96c3e4b5261d51ac",
          "Name": "overWrite",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2473a7de199a47df902ffde628d16866",
          "Name": "data",
          "Description": "Data written to the spreadsheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportExcel (filePath: string, sheetName: string, startRow: int, startCol: int, data: var[][], overWrite: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"C:\\\\Revit\\\\Excel\\\\RevitMacros02.xlsx\";\n\"LineDataOut\";\n1;\n1;\n1;",
      "Id": "53b7a70991b045e8be7f2d38f12ab672",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9483bacb4d9842fd98e220121294dc3b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1994578a31554213a60cf87eac5bcf24",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96675673e1874e64b335d14b2dd9a2ca",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd4bb4503e94462e89f696ae1691ef62",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e11cbb65c3074d29b115b8bd3b467c16",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Elements.Element.LocationCurve@Revit.Elements.Element",
      "Id": "951a6938ec5b43eca0853b4a19113229",
      "Inputs": [
        {
          "Id": "2dce58654eaf4b799dc3c69ffafb229e",
          "Name": "element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04bf837fd1fe4b61aec9145a415e3249",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the LocationCurve from Element if exist (CableTrays, Pipes, Ducts, Conduits)\n\nElement.LocationCurve (element: Element): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[Id,Mark,D.StartPoint.X,D.StartPoint.Y,D.StartPoint.Z, D.EndPoint.X,D.EndPoint.Y,D.EndPoint.Z];",
      "Id": "de28bb65b96f4536afb5ce40c53fa53a",
      "Inputs": [
        {
          "Id": "832383ce97cd437a8904cac5f14140ba",
          "Name": "Id",
          "Description": "Id",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94cb2b5b0b904adbb325e3c76e6f998c",
          "Name": "Mark",
          "Description": "Mark",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "328d2ddb61194d74a036a0df065c3e5d",
          "Name": "D",
          "Description": "D",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39ee135851ba4c4699c249dc282e017d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Elem1.Id;",
      "Id": "8683b09d1a324757b63889fe55d72cd1",
      "Inputs": [
        {
          "Id": "02ba842e27304fdc856e697cddd44327",
          "Name": "Elem1",
          "Description": "Elem1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4ddf3a4b0cf4c54a1a3f926c8d0711e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "10257445f17e4802997ec1823742c137",
      "Inputs": [
        {
          "Id": "093acfa83fb4401aa57d565456a6c74a",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "959c30b4bf964b7396676fe4244857cc",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Data5=List.Transpose(Data4);\nList.RestOfItems(Data5[0]);\nList.RestOfItems(Data5[1]);\nList.RestOfItems(Data5[2]);\nList.RestOfItems(Data5[3]);\nList.RestOfItems(Data5[4]);\nList.RestOfItems(Data5[5]);\nList.RestOfItems(Data5[6]);",
      "Id": "e8a88892f87140658c8f251755ad5448",
      "Inputs": [
        {
          "Id": "6d7165346faf460a8b51f71d74587788",
          "Name": "Data4",
          "Description": "Data4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "663f5d3eb06d4dfcad874acca85cb86e",
          "Name": "",
          "Description": "Data5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb50f3b44e3f4cfc846e6dbd1705b83f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5ecc9215ff1457498767bddd9c592ed",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ed0729779e541308fff841194b1a9e3",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e137b4f13f594bdc8dffc842fc05df15",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a59bdeba25e47ffab5564b96b0c8d65",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dc3638af76f444c8bbb6d2528a5a5fd",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0f8d315bb7a4d0e93e1869d62e32860",
          "Name": "",
          "Description": "Value of expression at line 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\n\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, BuiltInCategory, ElementId\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndef GetLevel(level_name):\r\n\tlevel_id = None\r\n\tlevel_el = None\r\n\r\n\tfor level in levels:\r\n\t\tif level.Name == level_name:\r\n\t\t\tlevel_el = level\r\n\t\t\tbreak\t\r\n\treturn level_el\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nlevels = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Levels).WhereElementIsNotElementType().ToElements()\r\n\r\nlevel_elems = []\r\nlevel_names = IN[0]\r\nfor level_name in level_names:\r\n\tlevel_elems.append(GetLevel(level_name))\r\nOUT = level_elems\r\n",
      "VariableInputPorts": true,
      "Id": "f792f3559d824bdaa60861d474200694",
      "Inputs": [
        {
          "Id": "8e1ff2fdc1f44dbb83b8fd93857772b2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3da01af6b98d4e438e6fb2083a2a8bf4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\n\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n\r\ndef createText(text):\r\n\ttext_location = XYZ(0, 0, 0)\r\n\tactive_view = doc.ActiveView\r\n\ttext_note_types = FilteredElementCollector(doc).OfClass(TextNoteType).ToElements()\r\n\ttext_type = text_note_types[0]\r\n\ttext_note = TextNote.Create(doc, active_view.Id, text_location, text, text_type.Id) \r\n\treturn(text_note.Id)\r\n\r\ndef log(text):\r\n\twith open(\"C:\\\\Revit\\\\Dynamos\\\\log.txt\", \"a\") as file:\r\n\t\tfile.write(text+\"\\n\")\t\r\n\r\ndef getMark(tray):\r\n\tmark_param = tray.LookupParameter(\"Mark\")\r\n\treturn(mark_param.AsString())\r\n\r\ndef setMark(tray, value1):\r\n\tmark_param = tray.LookupParameter(\"Mark\")\r\n\tmark_param.Set(value1)\r\n\r\ndef setFittingMark(tray1,tray2,fitting):\r\n\tmark1 = getMark(tray1)\r\n\tmark2 = getMark(tray2)\r\n\tsetMark(fitting,mark1+\"-\"+mark2)\r\n\r\ndef closest_connectors(pipe1, pipe2):\r\n\tconn1 = pipe1.ConnectorManager.Connectors\r\n\tconn2 = pipe2.ConnectorManager.Connectors\r\n\r\n\tdist = 100000000\r\n\tconnset = None\r\n\tfor c in conn1:\r\n\t\tfor d in conn2:\r\n\t\t\tconndist = c.Origin.DistanceTo(d.Origin)\r\n\t\t\tif conndist < dist:\r\n\t\t\t\tdist = conndist\r\n\t\t\t\tconnset = [c,d]\r\n\treturn connset\r\n\r\ndef check_dir(conn1,conn2):\r\n\tif conn1.CoordinateSystem.BasisZ.ToString() == conn2.CoordinateSystem.BasisZ.ToString() or conn1.CoordinateSystem.BasisZ.ToString() == (conn2.CoordinateSystem.BasisZ*-1).ToString():\r\n\t\treturn True\r\n\telse:\r\n\t\treturn False\r\n\r\ndef drawFitting(pipe1,pipe2):\r\n\r\n\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\tconnectors = closest_connectors(pipe1,pipe2)\r\n\t\r\n\ttry:\r\n\t\tif check_dir(connectors[0],connectors[1]):\r\n\t\t\ttextId = 100\r\n\t\t\t#fitting = doc.Create.NewUnionFitting(connectors[0],connectors[1])\r\n\t\t\tfitting = doc.Create.NewTransitionFitting(connectors[0],connectors[1])\r\n\t\telse:\r\n\t\t\tfitting = doc.Create.NewElbowFitting(connectors[0],connectors[1])\r\n\texcept:\r\n\t\treturn\t\t\r\n\t\r\n\tif fitting is not None:\r\n\t\tsetFittingMark(pipe1,pipe2,fitting)\r\n\t\tfittings.append(fitting.ToDSType(False))\r\n\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\nData = IN[0]\r\nSelection = IN[1]\r\nfittings = []\r\n\r\nfor n in range(len(Data)-1):\r\n\tif Selection[n]:\r\n\t\tdrawFitting(UnwrapElement(Data[n]), UnwrapElement(Data[n+1]))\r\n\r\nOUT = fittings\r\n",
      "VariableInputPorts": true,
      "Id": "f52d5f8969d542a0955b379f9fe506b2",
      "Inputs": [
        {
          "Id": "723bd54e31764fceb1f353662e513da5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f41b61e400984917bd96f5a7620d2f45",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f8038554b7d4f19b4449c1530f11bb3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bc7a3aab9244ac3bfe59b1ca64622fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[E.Id,Mark,E.Location.X,E.Location.Y,E.Location.Z];",
      "Id": "7be67fae5ebd4a46bbd78ae5c02aaa0c",
      "Inputs": [
        {
          "Id": "395dbf3059a74e349dc4a3a544fe63e7",
          "Name": "E",
          "Description": "E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9511dc496e43492195a6089337372cbb",
          "Name": "Mark",
          "Description": "Mark",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1591e3c3bc745b0ab78596bc46ed152",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "8b7c2cf2b33841dc9d957bd84c415c22",
      "Inputs": [
        {
          "Id": "17a0a6a0b9d94b529b19f4b2a897354b",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8c5eea8c3424881a4cb27e1f73fed9f",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ce0b7e6a63f4c5fa8bf0414a3527be1",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b97f5e5ded984ee2afc0c9d5430949fb",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33524a6f5bef4ff59a8d18979477e4d3",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8570d399bec40558b8fb55bb310ec67",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74624dfdb767469b87eb1e4ef44880f5",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee1af172bcf5403295064961633948fe",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "84d3db80521d46678bd959be69ad0015",
      "Inputs": [
        {
          "Id": "63cc8f8d7bec4c1f8d8bf605e98f1891",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "698ef190ee1d42be88fd97dbb9cd0812",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\ndef SetParam(name, value):\r\n\tparType = tray.LookupParameter(name)\r\n\tif parType:\r\n\t\tparType.Set(value)\t\r\n\r\ntoggle = \"\"\r\n\r\nlines = IN[0]\r\nFirstPoint = [x.StartPoint for x in lines]\r\nSecondPoint = [x.EndPoint for x in lines]\r\ncabletraytypesid = IN[1]\r\nlevels = UnwrapElement(IN[2])\r\nwidth = IN[3]\r\nheight =IN[4]\r\nmark =IN[5]\r\nservice =IN[6]\r\n\r\nelements = []\r\ntrays =[]\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\nfor i,x in enumerate(FirstPoint):\r\n\ttray = Autodesk.Revit.DB.Electrical.CableTray.Create(doc,ElementId(cabletraytypesid[i]),FirstPoint[i].ToXyz(),SecondPoint[i].ToXyz(),levels[i].Id)\r\n\t\r\n\tparam = tray.get_Parameter(BuiltInParameter.RBS_CABLETRAY_WIDTH_PARAM)\r\n\tparam.SetValueString(width[i].ToString())\r\n\t\r\n\tparam2 = tray.get_Parameter(BuiltInParameter.RBS_CABLETRAY_HEIGHT_PARAM)\r\n\tparam2.SetValueString(height[i].ToString())\r\n\r\n\tSetParam(\"Mark\",mark[i])\r\n\tSetParam(\"Service Type\", service[i])\r\n\r\n\t#trays.append(tray)\r\n\telements.append(tray.ToDSType(False))\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\t\r\n\t\r\nOUT = elements",
      "VariableInputPorts": true,
      "Id": "12d720204b314a7584473b2837ddc798",
      "Inputs": [
        {
          "Id": "298163d787e747fabf0f7fef6edb4f09",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7d55e7880294f6bac6e04ba44be8146",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74ff9ca85e084cbaa249ba0f84f98652",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe3654017d5f4be0ab3454b49275e801",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9bb86455b9f40b3ad4d12f1fe79be56",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43d97ee2668c45d2822f43e77915a4c7",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab2cef21843845ca810547354e072917",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13b21a9a2b0c4a50952187df20675a95",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\n# Import RevitAPI classes\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nfrom Autodesk.Revit.DB import ElementId\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Inputs\r\nelement_ids = IN[0]  # List of element IDs\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Initialize an empty list to store elements\r\nelements = []\r\n\r\n# Iterate through the list of IDs\r\nfor eid in element_ids:\r\n    # Convert the input ID to an ElementId object\r\n    id = ElementId(eid)\r\n    # Get the element\r\n    element = doc.GetElement(id)\r\n    # Add the element to the list\r\n    if element:\r\n        elements.append(element)\r\n\r\n# Output the list of elements\r\nOUT = elements\r\n",
      "VariableInputPorts": true,
      "Id": "25199bab67de4a3fb1871171b057df3a",
      "Inputs": [
        {
          "Id": "267a7bc0235b422f8d35ffcb91742ea1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b17668bef10e4bb79e993b63144a43ff",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6aabcaef61b54cc7a0cc8864c106089d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[Id,Mark,D.StartPoint.X,D.StartPoint.Y,D.StartPoint.Z, D.EndPoint.X,D.EndPoint.Y,D.EndPoint.Z];",
      "Id": "a3f0bccb1123432f916a1e2e596cd7f5",
      "Inputs": [
        {
          "Id": "0aba891d18384299ad196faa94154ef5",
          "Name": "Id",
          "Description": "Id",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e38f1f515d541cba11b74b942e65fea",
          "Name": "Mark",
          "Description": "Mark",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31c55c44cd074e09adf15d34eecd0fae",
          "Name": "D",
          "Description": "D",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "850e7b53f44e4f499901c739df57fcc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Elements.Element.LocationCurve@Revit.Elements.Element",
      "Id": "b0ab00428eec4599ac4d5ebab6540ce2",
      "Inputs": [
        {
          "Id": "fb0a7050e64b40bbb26c0c4570889505",
          "Name": "element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "939937e7c9a94340bc252f36d0e530c7",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the LocationCurve from Element if exist (CableTrays, Pipes, Ducts, Conduits)\n\nElement.LocationCurve (element: Element): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "bd64da64c22748cbaf0ba1307ebab2b4",
      "Inputs": [
        {
          "Id": "5cb97e0b9e8640278a2b2897d6cfd2be",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc93fdb8481e4395a07fb9c70ac4ef53",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[[\"Id\",\"Mark\",\"X1\",\"Y1\",\"Z1\",\"X2\",\"Y2\",\"Z2\"]];\n[\"Tray Without Fittings\"];\n[\"Tray With Fittings\"];\n[\"Fittings\"];",
      "Id": "95eb3829701b4aa9b98b1c1cb456bfd2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5b35447d96a54e49b8f17e75d73b4d24",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7090656474a84fd7b21cb43fc20506f4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "568781c9441c405eaf9bad6cdf1f9ffb",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2699d1f1ae754f099b49de90bd1f8c13",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "393b28ebb3694d2cad3b4f3ab545adba",
      "Inputs": [
        {
          "Id": "a0070d30e72a4bbeae8e66743311b4b4",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8890e24943a4021bf0332a66b768199",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\n\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Function to get the coordinates of connection points\r\n\r\ndef get_cable_tray_params(cable_tray):\r\n\tparams = {}\r\n\tfor param in cable_tray.Parameters:\r\n\t\tparam_name = param.Definition.Name\r\n\t\tif param.StorageType == StorageType.String:\r\n\t\t\tparam_value = param.AsString()\r\n\t\telif param.StorageType == StorageType.Double:\r\n\t\t\tparam_value = param.AsDouble()\r\n\t\telif param.StorageType == StorageType.Integer:\r\n\t\t\tparam_value = param.AsInteger()\r\n\t\telif param.StorageType == StorageType.ElementId:\r\n\t\t\tparam_value = param.AsElementId().IntegerValue\r\n\t\telse:\r\n\t\t\tparam_value = None\r\n\t\tparams[param_name] = param_value\r\n\treturn params\r\n\r\nf = 25.4*12\r\n\r\ntrays = IN[0]\r\n\r\nall_params = []\r\n#all_params = [['Id', 'Mark','Service Type', 'TypeId', 'TypeName', 'FamilyName', 'Length', 'Width', 'Height','X1','Y1','Z1','X2','Y2','Z2','X3','Y3','Z3','X4','Y4','Z4']]\r\n\r\nfor tray in trays:\r\n\tparams = get_cable_tray_params(UnwrapElement(tray))\r\n\tparam = params['Mark']\r\n\tall_params.extend([param])\r\n\r\nOUT = all_params\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "8c853bbec5e949329b46b0dab9296e4e",
      "Inputs": [
        {
          "Id": "9234049b007d49ed811d348cafb1fcad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd48366afa0f42d78bf374a90c42ccb4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\n\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Function to get the coordinates of connection points\r\n\r\ndef getMark(tray):\r\n\tmark_param = tray.LookupParameter(\"Mark\")\r\n\treturn(mark_param.AsString())\r\n\r\nf = 25.4*12\r\n\r\ntrays = IN[0]\r\n\r\nparams = []\r\n\r\nfor tray1 in trays:\r\n\ttray = UnwrapElement(tray1)\r\n\tparams.append(getMark(tray))\r\n\r\nOUT = params\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "6de48c0ece10457f881554493309b19f",
      "Inputs": [
        {
          "Id": "f4cc45f9017a4f32bbd64efdc0aa4a29",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88c08d43fef34427a974b6970f8e615a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3071079c0d20404c8fcb13ac2fbf8b58",
      "Inputs": [
        {
          "Id": "aecff3b315c049c2ae498455fe8c7b35",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c5997749e9844728d6d043e7cd33e03",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "daa9d4028785402c85a30e3da44c39b1",
      "End": "3870a6d5cc104b5492d8e6c9f7b026b2",
      "Id": "bd574fc0e4f240f495adc366865473a3"
    },
    {
      "Start": "daa9d4028785402c85a30e3da44c39b1",
      "End": "6d7165346faf460a8b51f71d74587788",
      "Id": "60968035406c48fea9bcabceb4b9ca40"
    },
    {
      "Start": "dea6f35f2f784cde943df0e80798475f",
      "End": "be4d599cb223410096d1e2c91320396f",
      "Id": "0b25e5664cc4446e9bb20eb18a79374d"
    },
    {
      "Start": "a50b50564d6e41aeb482818df21dea0c",
      "End": "58015c46443a47ebafa01a15b4113f20",
      "Id": "5d87ab28b02e48c8bc53dbd16c21e857"
    },
    {
      "Start": "505f6400e1a64a05bddc65729d05862f",
      "End": "1064fb1c826d427aa77ae37f99bdfd03",
      "Id": "9c75076a52774cc8a062cddc400f5b30"
    },
    {
      "Start": "f0e13cb9ab4e49588e8fa4d5869763f3",
      "End": "52d47ed45f4d4670a66132bf2f5e11c6",
      "Id": "392f1ebb0b2546268708c94f72071eeb"
    },
    {
      "Start": "e4963754d52c41e08b75b1f83cf725e7",
      "End": "64ef4ce974d7423c8481eb4469d4c981",
      "Id": "9e5d4b691bf84e2d857575816ba4b99a"
    },
    {
      "Start": "82843f3bcc3f41c2b918a60afa4e566e",
      "End": "298163d787e747fabf0f7fef6edb4f09",
      "Id": "621ef13d19b54db5885c45dd07fef659"
    },
    {
      "Start": "9483bacb4d9842fd98e220121294dc3b",
      "End": "899622d4c8a84fbf884f5c5c0e884a94",
      "Id": "1856137611964ff38a23324d54cd9d28"
    },
    {
      "Start": "1994578a31554213a60cf87eac5bcf24",
      "End": "baa562b47a0943b0a8f81d776e8b23d2",
      "Id": "82f175d54157429e993bf08c2d660c2e"
    },
    {
      "Start": "96675673e1874e64b335d14b2dd9a2ca",
      "End": "3ebba9b3bffa43a197299365397cb82d",
      "Id": "196c9e2ff18441959b36c8245975a96b"
    },
    {
      "Start": "cd4bb4503e94462e89f696ae1691ef62",
      "End": "853e021cac564279b2487318fb992e0f",
      "Id": "0782f22845824a5da115d6341288173e"
    },
    {
      "Start": "e11cbb65c3074d29b115b8bd3b467c16",
      "End": "a29e185d46794cfc96c3e4b5261d51ac",
      "Id": "5d51e36b3bf14a6d854664d198c40937"
    },
    {
      "Start": "04bf837fd1fe4b61aec9145a415e3249",
      "End": "328d2ddb61194d74a036a0df065c3e5d",
      "Id": "0c6442d6999d45458ab4027f8a2bcc83"
    },
    {
      "Start": "39ee135851ba4c4699c249dc282e017d",
      "End": "093acfa83fb4401aa57d565456a6c74a",
      "Id": "33ef5b80040f46e398bcf5d29206a4d3"
    },
    {
      "Start": "a4ddf3a4b0cf4c54a1a3f926c8d0711e",
      "End": "267a7bc0235b422f8d35ffcb91742ea1",
      "Id": "2039fd9b62034a558491203967276228"
    },
    {
      "Start": "a4ddf3a4b0cf4c54a1a3f926c8d0711e",
      "End": "0aba891d18384299ad196faa94154ef5",
      "Id": "123997db4869457eaa22cd61e5f7f902"
    },
    {
      "Start": "a4ddf3a4b0cf4c54a1a3f926c8d0711e",
      "End": "832383ce97cd437a8904cac5f14140ba",
      "Id": "37e75d9d002e4a13b2cbca1587ddda13"
    },
    {
      "Start": "959c30b4bf964b7396676fe4244857cc",
      "End": "33524a6f5bef4ff59a8d18979477e4d3",
      "Id": "11db63551ad94036a0cd61e7b424fd26"
    },
    {
      "Start": "bb50f3b44e3f4cfc846e6dbd1705b83f",
      "End": "a7d55e7880294f6bac6e04ba44be8146",
      "Id": "dcc5cc69750a47798cb8b22f6f41c08c"
    },
    {
      "Start": "a5ecc9215ff1457498767bddd9c592ed",
      "End": "8e1ff2fdc1f44dbb83b8fd93857772b2",
      "Id": "f338ee557bde459c9c6177eae37d67d9"
    },
    {
      "Start": "3ed0729779e541308fff841194b1a9e3",
      "End": "f41b61e400984917bd96f5a7620d2f45",
      "Id": "3631dc2c73c442fb86e89292d151e550"
    },
    {
      "Start": "e137b4f13f594bdc8dffc842fc05df15",
      "End": "43d97ee2668c45d2822f43e77915a4c7",
      "Id": "288f59c572ee431582b47c666b64257e"
    },
    {
      "Start": "4a59bdeba25e47ffab5564b96b0c8d65",
      "End": "ab2cef21843845ca810547354e072917",
      "Id": "cd4000c85fe14402934d94a1cfb95256"
    },
    {
      "Start": "7dc3638af76f444c8bbb6d2528a5a5fd",
      "End": "fe3654017d5f4be0ab3454b49275e801",
      "Id": "34c1f397bd8e4a8690fc4825ac164c02"
    },
    {
      "Start": "a0f8d315bb7a4d0e93e1869d62e32860",
      "End": "b9bb86455b9f40b3ad4d12f1fe79be56",
      "Id": "c50297b550724d42b034bbfb99d6e3ab"
    },
    {
      "Start": "3da01af6b98d4e438e6fb2083a2a8bf4",
      "End": "74ff9ca85e084cbaa249ba0f84f98652",
      "Id": "dca01deac8034e138a4b2feeaca5c89d"
    },
    {
      "Start": "0bc7a3aab9244ac3bfe59b1ca64622fe",
      "End": "b17668bef10e4bb79e993b63144a43ff",
      "Id": "028968408d4d448dae765285eab31fac"
    },
    {
      "Start": "0bc7a3aab9244ac3bfe59b1ca64622fe",
      "End": "9234049b007d49ed811d348cafb1fcad",
      "Id": "f1159468209e4f1b92ed46db7bb2641e"
    },
    {
      "Start": "0bc7a3aab9244ac3bfe59b1ca64622fe",
      "End": "395dbf3059a74e349dc4a3a544fe63e7",
      "Id": "268e2407d30743c99f16ff80d64ca4ac"
    },
    {
      "Start": "0bc7a3aab9244ac3bfe59b1ca64622fe",
      "End": "aecff3b315c049c2ae498455fe8c7b35",
      "Id": "162122c801be4801837db1c87ba35cec"
    },
    {
      "Start": "f1591e3c3bc745b0ab78596bc46ed152",
      "End": "63cc8f8d7bec4c1f8d8bf605e98f1891",
      "Id": "ad8d2a09985746db8daa15270142fa43"
    },
    {
      "Start": "ee1af172bcf5403295064961633948fe",
      "End": "a2e23ddaa97149f5942122e78700fa68",
      "Id": "1153b4c568bc4fccac94f40586166568"
    },
    {
      "Start": "698ef190ee1d42be88fd97dbb9cd0812",
      "End": "74624dfdb767469b87eb1e4ef44880f5",
      "Id": "265044e3d2fe46b9836948bc90845c68"
    },
    {
      "Start": "13b21a9a2b0c4a50952187df20675a95",
      "End": "723bd54e31764fceb1f353662e513da5",
      "Id": "2b9badd9e81a4eecb767aaf1f8f27502"
    },
    {
      "Start": "13b21a9a2b0c4a50952187df20675a95",
      "End": "02ba842e27304fdc856e697cddd44327",
      "Id": "9ccc7b83e82744eb8e08ff5e8303fcb6"
    },
    {
      "Start": "13b21a9a2b0c4a50952187df20675a95",
      "End": "fb0a7050e64b40bbb26c0c4570889505",
      "Id": "b9e379cae4514f4a969a14f0b94c7600"
    },
    {
      "Start": "13b21a9a2b0c4a50952187df20675a95",
      "End": "f4cc45f9017a4f32bbd64efdc0aa4a29",
      "Id": "f7e6f274aa37498fb98952c937f20847"
    },
    {
      "Start": "6aabcaef61b54cc7a0cc8864c106089d",
      "End": "2dce58654eaf4b799dc3c69ffafb229e",
      "Id": "a625f6545b2d4aa2a6f9407b5e06426d"
    },
    {
      "Start": "850e7b53f44e4f499901c739df57fcc3",
      "End": "5cb97e0b9e8640278a2b2897d6cfd2be",
      "Id": "aa906c1567594cc6b1633ad28e783cd8"
    },
    {
      "Start": "850e7b53f44e4f499901c739df57fcc3",
      "End": "1f8038554b7d4f19b4449c1530f11bb3",
      "Id": "7be8333c1dee41b5a2b2fadd20c9a7a2"
    },
    {
      "Start": "939937e7c9a94340bc252f36d0e530c7",
      "End": "31c55c44cd074e09adf15d34eecd0fae",
      "Id": "93d01be4b758473e8c0dc6913a090ce2"
    },
    {
      "Start": "dc93fdb8481e4395a07fb9c70ac4ef53",
      "End": "2ce0b7e6a63f4c5fa8bf0414a3527be1",
      "Id": "1096690c42ad4c6bbe37682e2f13f326"
    },
    {
      "Start": "5b35447d96a54e49b8f17e75d73b4d24",
      "End": "17a0a6a0b9d94b529b19f4b2a897354b",
      "Id": "0c35e4df50e0430ab5f7e154b36de0c4"
    },
    {
      "Start": "7090656474a84fd7b21cb43fc20506f4",
      "End": "c8c5eea8c3424881a4cb27e1f73fed9f",
      "Id": "febf19c683c948d3ab7a3b2d20d629f2"
    },
    {
      "Start": "568781c9441c405eaf9bad6cdf1f9ffb",
      "End": "b97f5e5ded984ee2afc0c9d5430949fb",
      "Id": "538a34aed0ae449084548a29a94e2899"
    },
    {
      "Start": "2699d1f1ae754f099b49de90bd1f8c13",
      "End": "d8570d399bec40558b8fb55bb310ec67",
      "Id": "7de065e523194c1d8c61fec24d5af6c2"
    },
    {
      "Start": "f8890e24943a4021bf0332a66b768199",
      "End": "3e38f1f515d541cba11b74b942e65fea",
      "Id": "4f264361faf3471b851cdadb73e846a1"
    },
    {
      "Start": "f8890e24943a4021bf0332a66b768199",
      "End": "94cb2b5b0b904adbb325e3c76e6f998c",
      "Id": "fa90a2e75c2d4d1780866090261814cf"
    },
    {
      "Start": "bd48366afa0f42d78bf374a90c42ccb4",
      "End": "9511dc496e43492195a6089337372cbb",
      "Id": "6ed53e6cd3244d73bbaab353d155ee28"
    },
    {
      "Start": "88c08d43fef34427a974b6970f8e615a",
      "End": "a0070d30e72a4bbeae8e66743311b4b4",
      "Id": "20d2f35ca66f4e6d856685a72f2a5828"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "Universo_BIM",
      "Version": "19.10.11",
      "ReferenceType": "Package",
      "Nodes": [
        "951a6938ec5b43eca0853b4a19113229",
        "b0ab00428eec4599ac4d5ebab6540ce2"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "100"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "9ad9b8efca7c4f2e93c02865a397544e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6957.1068153647911,
        "Y": -775.49162966267522
      },
      {
        "Id": "04def07fc35f47ba92301cf52c77e3f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -7633.1984456700266,
        "Y": -832.13873394493646
      },
      {
        "Id": "1542f083d4934e5ca2d7b9250529316a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "File From Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -7145.1338128263315,
        "Y": -873.880506130386
      },
      {
        "Id": "ac2d7f4636be4979841e2267c7c8179c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Get Lines",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6608.7353033874042,
        "Y": -769.07975390575189
      },
      {
        "Id": "f5f7d2a2d2cf4d0d9a876c760c52aba2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Data.ExportExcel",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4671.5509670568736,
        "Y": -952.005105231104
      },
      {
        "Id": "53b7a70991b045e8be7f2d38f12ab672",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -5554.6656289379434,
        "Y": -1208.277983941578
      },
      {
        "Id": "951a6938ec5b43eca0853b4a19113229",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.LocationCurve",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5521.6779201669406,
        "Y": -450.78147615132264
      },
      {
        "Id": "de28bb65b96f4536afb5ce40c53fa53a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5183.657323498097,
        "Y": -479.84557701295483
      },
      {
        "Id": "8683b09d1a324757b63889fe55d72cd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5560.7480183401776,
        "Y": -755.6533112714842
      },
      {
        "Id": "10257445f17e4802997ec1823742c137",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4400.0919539764009,
        "Y": -295.509515942855
      },
      {
        "Id": "e8a88892f87140658c8f251755ad5448",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6663.0069279542231,
        "Y": -624.11282295683657
      },
      {
        "Id": "f792f3559d824bdaa60861d474200694",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Level from Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6322.3142840695755,
        "Y": -718.70855056317657
      },
      {
        "Id": "f52d5f8969d542a0955b379f9fe506b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CableTray Fitting",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5809.9206636819636,
        "Y": -297.28773874299941
      },
      {
        "Id": "7be67fae5ebd4a46bbd78ae5c02aaa0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5029.951518991089,
        "Y": 11.685859145450763
      },
      {
        "Id": "8b7c2cf2b33841dc9d957bd84c415c22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4060.8145817134614,
        "Y": -180.50289902925761
      },
      {
        "Id": "84d3db80521d46678bd959be69ad0015",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4454.6025169402683,
        "Y": 10.0881176152823
      },
      {
        "Id": "12d720204b314a7584473b2837ddc798",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CableTrayByLines",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5819.5652388680583,
        "Y": -799.13408039543947
      },
      {
        "Id": "25199bab67de4a3fb1871171b057df3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "GetElementFromId",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5684.1955216941069,
        "Y": -520.0045236158428
      },
      {
        "Id": "a3f0bccb1123432f916a1e2e596cd7f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5199.9624426615455,
        "Y": -633.56844549104164
      },
      {
        "Id": "b0ab00428eec4599ac4d5ebab6540ce2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.LocationCurve",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5398.1243867086505,
        "Y": -879.690405927609
      },
      {
        "Id": "bd64da64c22748cbaf0ba1307ebab2b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4315.8839993532047,
        "Y": -542.50075080095235
      },
      {
        "Id": "95eb3829701b4aa9b98b1c1cb456bfd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4726.11512732538,
        "Y": -163.94115049668011
      },
      {
        "Id": "393b28ebb3694d2cad3b4f3ab545adba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Watch",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5924.9721742096017,
        "Y": -1127.3183181609024
      },
      {
        "Id": "8c853bbec5e949329b46b0dab9296e4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Tray Params",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5323.5930283080925,
        "Y": 15.995479710110828
      },
      {
        "Id": "6de48c0ece10457f881554493309b19f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Tray Mark",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6171.0587686456529,
        "Y": -1113.9815978180611
      },
      {
        "Id": "3071079c0d20404c8fcb13ac2fbf8b58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Watch",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5639.3426793501239,
        "Y": -129.78085015735888
      }
    ],
    "Annotations": [],
    "X": 5340.7776567410956,
    "Y": 492.12779672169029,
    "Zoom": 0.91354439341749893
  }
}