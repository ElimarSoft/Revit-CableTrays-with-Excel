{
  "Uuid": "e3e36051-cc7c-4af4-aee3-b3ca27c46fea",
  "IsCustomNode": false,
  "Description": null,
  "Name": "DisplayId05",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\n\r\nfrom Autodesk.Revit.DB import ElementId, XYZ, TextNote, TextNoteType, FilteredElementCollector, BuiltInCategory, LocationPoint, LocationCurve\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Get the current document and UIDocument\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\nuidoc = uiapp.ActiveUIDocument\r\n\r\ndef GetParam(element, name):\r\n\tpar_val = ''\r\n\tparType = element.LookupParameter(name)\t\r\n\tif parType:\t\r\n\t\tpar_val = parType.AsString()\r\n\treturn par_val\r\n# Collect CableTray elements\r\ncable_trays = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_CableTray).WhereElementIsNotElementType().ToElements()\r\n\r\n# Collect CableTrayFitting elements\r\ncable_tray_fittings = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_CableTrayFitting).WhereElementIsNotElementType().ToElements()\r\n\r\n# Combine the collections\r\n\r\nfor element in list(cable_trays):\r\n\r\n\telement_mark = GetParam(element,'Mark')\r\n\telement_id = element.Id\r\n\telement_location = None\r\n\tif isinstance(element.Location, LocationPoint):\r\n\t\telement_location = element.Location.Point\r\n\telif isinstance(element.Location, LocationCurve):\r\n\t\t#element_location = element.Location.Curve.GetEndPoint(0)  # Get the start point of the curve\r\n\t\telement_location = element.Location.Curve.Evaluate(0.5, True)\r\n\r\n\t# Ensure element_location is set\r\n\tif element_location:\r\n\t\ttext_note_position = element_location # Adjust the offset as needed\r\n\t\ttext_note_type = FilteredElementCollector(doc).OfClass(TextNoteType).FirstElement()\r\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\ttext = str(element.Id)+':' + str(element_mark)\r\n\t\ttext_note = TextNote.Create(doc, doc.ActiveView.Id, text_note_position, text, text_note_type.Id)\r\n\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\nfor element in list(cable_tray_fittings):\r\n\r\n\telement_mark = GetParam(element,'Mark')\r\n\telement_id = element.Id\r\n\telement_location = None\r\n\tif isinstance(element.Location, LocationPoint):\r\n\t\telement_location = element.Location.Point\r\n\telif isinstance(element.Location, LocationCurve):\r\n\t\t#element_location = element.Location.Curve.GetEndPoint(0)  # Get the start point of the curve\r\n\t\telement_location = element.Location.Curve.Evaluate(0.5, True)\r\n\r\n\t# Ensure element_location is set\r\n\tif element_location:\r\n\t\ttext_note_position = element_location # Adjust the offset as needed\r\n\t\ttext_note_type = FilteredElementCollector(doc).OfClass(TextNoteType).FirstElement()\r\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\t\r\n\t\ttext = str(element.Id)+':' + str(element_mark)\r\n\t\ttext_note = TextNote.Create(doc, doc.ActiveView.Id, text_note_position, text, text_note_type.Id)\r\n\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "b275ddd39d634ce59ef84a9b38c4f888",
      "Inputs": [
        {
          "Id": "d3eaa428d32f4e8b8e8872f5ef703b44",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a42dc4e3e644dcfac200060c8abf3bc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 51,
      "MaximumValue": 100,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "40017893941c4c50972cf313e1c47938",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "707ce0e11b2043f2b10f034ba444f1e8",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    }
  ],
  "Connectors": [
    {
      "Start": "707ce0e11b2043f2b10f034ba444f1e8",
      "End": "d3eaa428d32f4e8b8e8872f5ef703b44",
      "Id": "d9c6c7d124374905acd1d58a46e27c35"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "b275ddd39d634ce59ef84a9b38c4f888",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 554.5,
        "Y": 161.5
      },
      {
        "Id": "40017893941c4c50972cf313e1c47938",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Integer Slider",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 166.5,
        "Y": 165.5
      }
    ],
    "Annotations": [],
    "X": -45.202499999999986,
    "Y": -109.30499999999995,
    "Zoom": 1.1575
  }
}